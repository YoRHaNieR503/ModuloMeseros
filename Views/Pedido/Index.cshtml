@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    int idMesa = (int)ViewData["IdMesa"];

    int idCuenta = ((List<int>)ViewData["idCuenta"])[0];
}
<style>
    .titulo-fuente {
        font-family: 'Arial', sans-serif;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col">
            <h4 class="text-white">Menú de: @ViewData["Categoria"]</h4>
            <h4 class="text-white">Id Cuenta: @idCuenta</h4>
        </div>
        <div class="col-md-2">
            <h5 class="text-white titulo-fuente">Dulce Sabor</h5>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <!-- Tabla de pedidos -->
            <form method="post" id="formAgregarPedido" asp-controller="Pedido" asp-action="AgregarPedido">
                <input type="hidden" name="idMesa" value="@idMesa">
                <input type="hidden" name="idCuenta" value="@idCuenta">
                <table class="table table-bordered table-dark table-hover align-items-center" id="tablaPedidos">
                    <thead>
                        <tr>
                            <th class="text-center">Producto o Alimento</th>
                            <th class="text-center">Estado</th>
                            <th class="text-center">Cantidad</th>
                            <th class="text-center">Precio</th>
                            <th class="text-center">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var listaProductos in (IEnumerable<dynamic>)ViewData["listaProductos"])
                        {
                            <tr>
                                    <input type="hidden" name="idPlato" value="@listaProductos.IdPlato">
                                    <input type="hidden" name="idCuenta" value="@idCuenta">
                                <td class="text-center">@listaProductos.Producto</td>
                                <td class="text-center">@listaProductos.Estado</td>
                                <input type="hidden" name="Estad" value="@listaProductos.Estado">
                                <td class="text-center">
                                    <input type="number" name="cantidad" class="cantidad" data-IdPlato="@listaProductos.IdPlato" data-precio="@listaProductos.Precio" value="1" min="1">
                                </td>
                                <td class="text-center precio">@listaProductos.Precio</td>
                                <td class="text-center total">0.00</td>
                                <td>
                                    <input type="hidden" name="totalPedido" id="totalPedido">
                                    <button type="submit" class="btn btn-success" name="idPlato" value="@listaProductos.IdPlato">Agregar Pedido</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </form>




        </div>
    </div>
</div>

<script>
    // Script para actualizar dinámicamente el precio y el total
    document.addEventListener("DOMContentLoaded", function () {
        var cantidadInputs = document.querySelectorAll(".cantidad");
        var precioElements = document.querySelectorAll(".precio");
        var totalElements = document.querySelectorAll(".total");
        var totalPedidoInput = document.getElementById("totalPedido");

        // Función para calcular el total
        function calcularTotal() {
            var total = 0;
            cantidadInputs.forEach(function (input, index) {
                var cantidad = parseInt(input.value);
                var precio = parseFloat(input.dataset.precio);
                var subtotal = cantidad * precio;
                total += subtotal;
                totalElements[index].textContent = subtotal.toFixed(2);
            });
            // Actualizar el valor del campo oculto con el total
            totalPedidoInput.value = total.toFixed(2);
        }

        // Evento para actualizar el total cuando cambia la cantidad
        cantidadInputs.forEach(function (input) {
            input.addEventListener("change", function () {
                calcularTotal();
            });
        });

        // Calcular total inicial
        calcularTotal();
    });




</script>
